{
  "swagger": "2.0",
  "info": {
    "description": "An API for full store management inventory, sales record and incidents",
    "version": "1.0.0",
    "title": "Store Manager",
    "contact": {
      "email": "ebenezerajayi@gmail.com",
      "name": "Olusola Ajayi"
    }
  },
  "host": "app-store-manager.herokuapp.com",
  "url": "https://app-store-manager.herokuapp.com",
  "basePath": "/api/v1",
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "https",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "users",
      "description": "API for users and authorization"
    },
    {
      "name": "products",
      "description": "Product listings and access"
    },
    {
      "name": "sales",
      "description": "APIs for All Sales orders and cart transactions"
    },
    {
      "name": "categories",
      "description": "Product Categories and groupings"
    },
    {
      "name": "incidents",
      "description": "Store incidents archive"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add a new user to the store",
        "description": "This route registers new users and check admin token",
        "operationId": "signUp",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Details of user that need to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "No user found"
          },
          "201": {
            "description": "New user created"
          }
        },
        "security": {
          "bearerAuth": []
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Logs in existing user",
        "description": "This route checks for existing users, validates login inputs and generates token",
        "operationId": "logIn",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userEmail",
            "in": "body",
            "type": "string",
            "required": true
          },
          {
            "name": "password",
            "in": "body",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "No user found"
          },
          "201": {
            "description": "user logged in successfully"
          }
        },
        "security": {
          "bearerAuth": []
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Gets all existing user",
        "description": "",
        "operationId": "getAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Token supplied"
          },
          "404": {
            "description": "Sales not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": {
          "bearerAuth": []
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update an existing user",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be updated in records",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": {
          "bearerAuth": []
        }
      }
    },
    "/user/{Id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Find user by ID",
        "description": "Returns a single user",
        "operationId": "getOne",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": {
          "bearerAuth": []
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Deletes one user",
        "description": "",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "User id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": {
          "bearerAuth": []
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Gets all existing product",
        "description": "",
        "operationId": "getAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": {
          "bearerAuth": []
        }
      },
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Creates New product",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": {
          "bearerAuth": []
        }
      }
    },
    "/products/{Id}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Find product by ID",
        "description": "Returns a single product",
        "operationId": "getOne",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          }
        },
        "security": {
          "bearerAuth": []
        }
      },
      "put": {
        "tags": [
          "products"
        ],
        "summary": "Update an existing product",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Product object that needs to be updated in records",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": {
          "bearerAuth": []
        }
      },
      "delete": {
        "tags": [
          "products"
        ],
        "summary": "Deletes one product",
        "description": "",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Product id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          }
        },
        "security": {
          "bearerAuth": []
        }
      }
    },
    "/sales": {
      "get": {
        "tags": [
          "sales"
        ],
        "summary": "Gets all sales",
        "description": "",
        "operationId": "getAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Token supplied"
          },
          "404": {
            "description": "Sales not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": {
          "bearerAuth": []
        }
      },
      "post": {
        "tags": [
          "sales"
        ],
        "summary": "Creates New Sales",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sales"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Token supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": {
          "bearerAuth": []
        }
      }
    },
    "/sales/{Id}": {
      "get": {
        "tags": [
          "sales"
        ],
        "summary": "Find product by ID",
        "description": "Returns a single product",
        "operationId": "getOne",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "salesId",
            "in": "path",
            "description": "ID of sales record to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Sales"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Sales record not found"
          }
        },
        "security": {
          "bearerAuth": []
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Gets all existing categories",
        "description": "",
        "operationId": "getAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": {
          "bearerAuth": []
        }
      },
      "post": {
        "tags": [
          "categories"
        ],
        "summary": "Creates New category",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Token supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": {
          "bearerAuth": []
        }
      }
    },
    "/categories/{Id}": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Find category by ID",
        "description": "Returns a single category",
        "operationId": "getOne",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of category to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Category not found"
          }
        },
        "security": {
          "bearerAuth": []
        }
      },
      "put": {
        "tags": [
          "categories"
        ],
        "summary": "Update an existing category",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Category object that needs to be updated in records",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Category not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": {
          "bearerAuth": []
        }
      },
      "delete": {
        "tags": [
          "categories"
        ],
        "summary": "Deletes one category",
        "description": "",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Category id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Category not found"
          }
        },
        "security": {
          "bearerAuth": []
        }
      }
    },
    "/incidents": {
      "get": {
        "tags": [
          "incidents"
        ],
        "summary": "Gets all incidents",
        "description": "",
        "operationId": "getAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Token supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": {
          "bearerAuth": []
        }
      },
      "post": {
        "tags": [
          "incidents"
        ],
        "summary": "Creates New Incident Report",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Incident"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Token supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": {
          "bearerAuth": []
        }
      }
    },
    "/incidents/{Id}": {
      "get": {
        "tags": [
          "incidents"
        ],
        "summary": "Find product by ID",
        "description": "Returns a single incident",
        "operationId": "getOne",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of incident record to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "bearerAuth",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Incident"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Incident record not found"
          }
        },
        "security": {
          "bearerAuth": []
        }
      }
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT",
      "name": "x-access-token",
      "in": "header"
    },
    "api_key": {
      "type": "JWT",
      "name": "x-access-token",
      "in": "header"
    }
  },
  "definitions": {
    "Sales": {
      "type": "object",
      "required": [
        "salesid",
        "attendant",
        "productName"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "salesId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "type": "string"
        },
        "attendant": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Category": {
      "type": "object",
      "required": [
        "categoryName"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "categoryName": {
          "type": "string"
        },
        "categoryDetails": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "userName": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        },
        "userPriviledge": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "password2": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Incident": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "incidentTime": {
          "type": "string"
        },
        "incidentImage": {
          "type": "string"
        },
        "incidentDetails": {
          "type": "string"
        }
      }
    },
    "Product": {
      "type": "object",
      "required": [
        "productCategory",
        "productName",
        "productPrice"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "productCategory": {
          "$ref": "#/definitions/Category"
        },
        "productName": {
          "type": "string",
          "example": "Bread"
        },
        "productImage": {
          "type": "array",
          "xml": {
            "name": "photoUrl",
            "wrapped": true
          }
        },
        "productDetails": {
          "type": "string"
        },
        "productSpec": {
          "type": "string"
        },
        "productPrice": {
          "type": "string"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Store Manager",
    "url": "https://github.com/ebzeal/store-manager"
  }
}